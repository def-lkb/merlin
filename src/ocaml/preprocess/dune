(* -*- tuareg -*- *)

module J = Jbuild_plugin.V1

let ver =
  Scanf.sscanf J.ocaml_version "%s@.%s@." (fun maj min -> maj ^ min)

let need_cpp = 
  match ver with
  | "402" | "403" | "404" | "405" | "406" | "407" -> true
  | _ -> false

let mly_pattern, mly_rule = 
  if need_cpp then
    ("*.mlyp",
     "(rule\n\
       (targets parser_raw.mly)\n\
       (deps    parser_raw.mlyp)\n\
       (action\n\
         (with-stdout-to %{targets}\n\
           (run gcc -E -x c -P %{deps}))))")
  else 
    ("*.mly", "")
;;

Printf.ksprintf J.send {|
; We support too many versions of OCaml to handle the following properly:
;
;     Error (warning 3): deprecated: Stdlib.String.capitalize
;
(env
 (dev     (flags :standard -w -3))
 (release (flags :standard -w -3)))

(copy_files# %s/*.mll)
(copy_files %s/%s)
(copy_files# %s/lexer_raw.mli)

%s

(rule
 (targets
   parser_raw.ml parser_raw.mli
   parser_explain.ml parser_printer.ml parser_recover.ml)
 (enabled_if (= %%{profile} "release"))
 (action
   (progn
     (copy %s/parser_raw.ml     parser_raw.ml)
     (copy %s/parser_raw.mli    parser_raw.mli)
     (copy %s/parser_explain.ml parser_explain.ml)
     (copy %s/parser_printer.ml parser_printer.ml)
     (copy %s/parser_recover.ml parser_recover.ml))))

(ocamllex lexer_ident lexer_raw)

(library
  (name preprocess)
  (wrapped false)
  (libraries parsing))

(menhir
 (modules parser_raw)
 (mode    (promote-into %s))
 (flags :standard --inspection --table --cmly))

(rule
  (targets parser_recover.ml)
  (deps    parser_raw.cmly)
  (mode    (promote-into %s))
  (action
    (with-stdout-to %%{targets}
       (run %%{exe:./recover/gen_recover.exe} %%{deps}))))

(rule
  (targets parser_explain.ml)
  (deps    parser_raw.cmly)
  (mode    (promote-into %s))
  (action
    (with-stdout-to %%{targets}
       (run %%{exe:./explain/gen_explain.exe} %%{deps}))))

(rule
  (targets parser_printer.ml)
  (deps    parser_raw.cmly)
  (mode    (promote-into %s))
  (action
    (with-stdout-to %%{targets}
       (run %%{exe:./printer/gen_printer.exe} %%{deps}))))
|} ver ver mly_pattern ver mly_rule ver ver ver ver ver ver ver ver ver
